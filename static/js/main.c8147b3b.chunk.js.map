{"version":3,"sources":["Components/Goods.js","Components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["Goods","props","className","src","image","alt","title","cost","data-key","articul","Cart","renderObj","out","key","cart","goods","getGoodsFromArr","console","log","push","art","i","length","this","React","Component","App","showCart","useState","setCart","count","setCount","goodsArr","onClick","event","preventDefault","target","dataset","classList","contains","cartTemp","newCount","map","item","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAYeA,EAVD,SAACC,GACZ,OACG,sBAAKC,UAAU,cAAf,UACG,qBAAKC,IAAKF,EAAMG,MAAOC,IAAI,UAC3B,4BAAIJ,EAAMK,QACV,wCAAWL,EAAMM,KAAjB,UACA,wBAAQL,UAAU,cAAcM,WAAUP,EAAMQ,QAAhD,6B,4BCqCMC,E,4MAxCZC,UAAY,WACT,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAO,EAAKZ,MAAMa,KAAM,CAC9B,IAAIC,EAAQ,EAAKC,gBAAgBH,GACjCI,QAAQC,IAAIH,GACZH,EAAIO,KACD,+BACG,6BAAKJ,EAAK,QACV,6BAAK,EAAKd,MAAMa,KAAKD,KACrB,6BAAK,EAAKZ,MAAMa,KAAKD,GAAKE,EAAK,SAHzBF,IAOf,OAAOD,G,EAGVI,gBAAkB,SAACI,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKpB,MAAMc,MAAMO,OAAQD,IAC1C,GAAGD,IAAQ,EAAKnB,MAAMc,MAAMM,GAAjB,QAAgC,OAAO,EAAKpB,MAAMc,MAAMM,I,4CAIzE,WACG,OACG,sBAAKnB,UAAU,aAAf,UACG,yCACA,gCACG,kCACG,+BACG,yCACA,qCACA,yCAEFqB,KAAKZ,wB,GAnCLa,IAAMC,WC2CVC,MAtCf,WAAgB,IAmBVC,EAnBS,EACWC,mBAAS,IADpB,mBACNd,EADM,KACAe,EADA,OAEaD,mBAAS,GAFtB,mBAENE,EAFM,KAECC,EAFD,KA0Bb,OALEJ,EADW,IAAVG,EACU,cAAC,EAAD,CAAMhB,KAAMA,EAAMC,MAAQiB,IAE1B,gBAIX,sBAAK9B,UAAU,YAAf,UACE,sCACA,qBAAKA,UAAU,cAAc+B,QAzBjB,SAACC,GAGf,GAFAA,EAAMC,iBACNlB,QAAQC,IAAIgB,EAAME,OAAOC,QAAQxB,MAC7BqB,EAAME,OAAOE,UAAUC,SAAS,eAAgB,OAAO,EAC3D,IAAIC,EAAW1B,EACfG,QAAQC,IAAIsB,GACZA,EAASN,EAAME,OAAOC,QAAQxB,KAAO2B,EAASN,EAAME,OAAOC,QAAQxB,OAAS2B,EAASN,EAAME,OAAOC,QAAQxB,KAAO,EACjHgB,EAAQW,GAER,IAAIC,EAAWX,EACfW,IACAV,EAASU,GACTxB,QAAQC,IAAIY,IAaV,SACGE,EAASU,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAOC,KAAMZ,EAAU1B,MAAOqC,EAAKrC,MAAOF,MAAOuC,EAAKvC,MAAOG,KAAMoC,EAAKpC,KAAME,QAASkC,EAAKlC,SAAckC,EAAKlC,cAEtIkB,MC5BQkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c8147b3b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Goods = (props) => {\r\n   return (\r\n      <div className=\"goods-block\">\r\n         <img src={props.image} alt=\"goods\" />\r\n         <p>{props.title}</p>\r\n         <p>Price: {props.cost} Nok</p>\r\n         <button className=\"add-to-cart\" data-key={props.articul}>Add to cart</button>\r\n      </div>\r\n   )\r\n}\r\nexport default Goods;","\r\nimport React from 'react'\r\n\r\nclass Cart extends React.Component{\r\n\r\n   renderObj = () => {\r\n      let out = []\r\n      for (let key in this.props.cart) {\r\n         let goods = this.getGoodsFromArr(key);\r\n         console.log(goods);\r\n         out.push(\r\n            <tr key={key}>\r\n               <td>{goods['title']}</td>\r\n               <td>{this.props.cart[key]}</td>\r\n               <td>{this.props.cart[key]*goods['cost']}</td>\r\n            </tr>\r\n         )\r\n      }\r\n      return out;\r\n   }\r\n\r\n   getGoodsFromArr = (art) => {\r\n      for (let i = 0; i < this.props.goods.length; i++) {\r\n         if(art === this.props.goods[i]['articul']) return this.props.goods[i];\r\n      }\r\n   }\r\n\r\n   render(){\r\n      return(\r\n         <div className=\"cart-field\">\r\n            <h1>Orders:</h1>\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <th>Item id</th>\r\n                     <th>Art</th>\r\n                     <th>Cost</th>\r\n                  </tr>\r\n                  {this.renderObj()}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      )\r\n   }\r\n}\r\nexport default Cart;","import './App.css';\nimport goodsArr from './goods.json'\nimport React, { useState } from 'react'\nimport Goods from './Components/Goods';\nimport Cart from './Components/Cart';\n\n\n\nfunction App() {\n  const [cart, setCart] = useState({});\n  const [count, setCount] = useState(0);\n\n  let addToCart = (event)=>{\n    event.preventDefault();\n    console.log(event.target.dataset.key);\n    if(!event.target.classList.contains('add-to-cart')) return false;\n    let cartTemp = cart;\n    console.log(cartTemp);\n    cartTemp[event.target.dataset.key] ? cartTemp[event.target.dataset.key]++ : cartTemp[event.target.dataset.key] = 1;\n    setCart(cartTemp);\n    // cartTemp++;\n    let newCount = count;\n    newCount ++;\n    setCount(newCount);\n    console.log(count);\n  }\n\n  let showCart;\n  if(count !== 0){\n    showCart = <Cart cart={cart} goods ={goodsArr} />\n  } else {\n    showCart = 'No orders yet';\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Cart</h1>\n      <div className=\"goods-field\" onClick={addToCart}>\n        {goodsArr.map(item => <Goods data={goodsArr} title={item.title} image={item.image} cost={item.cost} articul={item.articul} key={item.articul}/>)} \n      </div>\n      {showCart}\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}